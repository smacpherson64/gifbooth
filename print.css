html, body, div, span, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
abbr, address, cite, code,
del, dfn, em, img, ins, kbd, q, samp,
small, strong, sub, sup, var,
b, i,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, figcaption, figure,
footer, header, hgroup, menu, nav, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent; }

main, article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  overflow-y: scroll;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  text-rendering: optimizeLegibility !important;
  -webkit-font-smoothing: antialiased !important; }

body {
  line-height: 1; }

*,
*:before,
*:after {
  position: relative;
  -webkit-box-sizing: inherit;
          box-sizing: inherit; }
  @media (max-width: 959px) {
    * *,
    *:before *,
    *:after * {
      -webkit-tap-highlight-color: transparent; } }

img,
object,
embed {
  max-width: 100%;
  height: auto; }

blockquote, q {
  quotes: none; }

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: '';
  content: none; }

a {
  margin: 0;
  padding: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent; }

del {
  text-decoration: line-through; }

abbr[title], dfn[title] {
  border-bottom: 1px dotted;
  cursor: help; }

i,
em {
  font-style: italic; }

b,
strong {
  font-weight: bold; }

q {
  quotes: "\201C" "\201D" "\2018" "\2019"; }

table {
  border-collapse: collapse;
  border-spacing: 0;
  font-size: inherit;
  font: 100%; }

th {
  font-weight: bold;
  vertical-align: bottom; }

td {
  font-weight: normal;
  vertical-align: top; }

input,
select {
  vertical-align: middle; }

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

button,
input,
select,
textarea {
  font-family: inherit;
  font-size: 100%;
  margin: 0; }

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

mark {
  background: #ff0;
  color: #000; }

pre {
  white-space: pre;
  white-space: pre-wrap;
  white-space: pre-line;
  word-wrap: break-word; }

pre,
code,
kbd,
samp {
  font-family: monospace, sans-serif; }

/*
 * Returns a color with an optional tone from the map
 *
 * @param {string}  $color_name     The base name of the color
 * @param {tone}    ($tone|'base')  The tone of that color or 'base'
 *
 * @return {string} The matching color's value from the map
 */
head {
  font-family: "mq-tiny";
  font-family: "mq-mini";
  font-family: "mq-small";
  font-family: "mq-medium";
  font-family: "mq-large";
  font-family: "mq-xlarge";
  font-family: "mq-xxlarge";
  font-family: "mq-xxxlarge"; }

title {
  font-family: "mq-tiny, mq-mini, mq-small, mq-medium, mq-large, mq-xlarge, mq-xxlarge, mq-xxxlarge"; }

.browse-happy p {
  display: block;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%); }

.visually-hidden {
  margin: -1px;
  padding: 0;
  width: 1px;
  height: 1px;
  overflow: hidden;
  clip: rect(0 0 0 0);
  clip: rect(0, 0, 0, 0);
  position: absolute; }

input[type="submit"] {
  background: transparent;
  outline: none;
  border: 0;
  padding: 0;
  margin: 0;
  font-size: 1em;
  cursor: pointer; }

.cf,
.clear,
.clearfix, .frame-container {
  zoom: 1; }
  .cf:before,
  .clear:before,
  .clearfix:before, .frame-container:before, .cf:after,
  .clear:after,
  .clearfix:after, .frame-container:after {
    content: "\0020";
    display: block;
    height: 0;
    overflow: hidden; }
  .cf:after,
  .clear:after,
  .clearfix:after, .frame-container:after {
    clear: both; }

@font-face {
  font-family: "symbols";
  src: url("assets/fonts/symbols//symbols.eot");
  src: url("assets/fonts/symbols//symbols.eot?#iefix") format("eot"), url("assets/fonts/symbols//symbols.woff") format("woff"), url("assets/fonts/symbols//symbols.ttf") format("truetype"), url("assets/fonts/symbols//symbols.svg#symbols") format("svg");
  font-weight: normal;
  font-style: normal; }

.sample-symbols .symbol-one:before, .sample-symbols .symbol-two:before {
  font-family: "symbols";
  width: 1em;
  margin: 0;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-align: center;
  text-decoration: inherit;
  text-transform: none;
  line-height: 1em;
  speak: none; }

.symbol:before {
  font-family: "symbols";
  width: 1em;
  margin: 0;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-align: center;
  text-decoration: inherit;
  text-transform: none;
  line-height: 1em;
  speak: none; }

.s-book:before {
  content: "\E001"; }

.s-briefcase:before {
  content: "\E002"; }

.s-camera:before {
  content: "\E003"; }

.s-delete:before {
  content: "\E004"; }

.s-download:before {
  content: "\E005"; }

.s-frames:before {
  content: "\E006"; }

.s-garbage:before {
  content: "\E007"; }

.s-pictures:before {
  content: "\E008"; }

.s-reload:before {
  content: "\E009"; }

.s-switch:before {
  content: "\E00A"; }

.sprite-sample, .sample-sprites .icon-one:before, .sample-sprites .icon-two:before {
  background-image: url("assets/images/sprites/sprite-sample.png"); }

@media (-webkit-min-device-pixel-ratio: 2), (-webkit-min-device-pixel-ratio: 0.75), (min-resolution: 72dpi) {
  .sprite-sample, .sample-sprites .icon-one:before, .sample-sprites .icon-two:before {
    background-image: url("assets/images/sprites/sprite-sample@2x.png");
    background-size: 200px 105px; } }

.wysiwyg p, .wysiwyg li, p,
dl,
address {
  font-size: 1.6rem;
  line-height: 1.5; }

.grid-samples h4 {
  font-size: 2rem;
  line-height: 1.45; }

.wysiwyg h5, .wysiwyg h6 {
  font-size: 2rem;
  line-height: 1.45;
  font-size: 2.5rem;
  line-height: 1.44; }

.wysiwyg h3, .wysiwyg h4, .grid-samples h2 {
  font-size: 2.5rem;
  line-height: 1.44;
  font-size: 3.1rem;
  line-height: 1.45161; }

.wysiwyg h1, .wysiwyg h2 {
  font-size: 3.1rem;
  line-height: 1.45161;
  font-size: 3.9rem;
  line-height: 1.46154; }

.wysiwyg h1, .wysiwyg h2 {
  font-weight: 300; }

.wysiwyg h3, .wysiwyg h4 {
  font-weight: 400; }

.wysiwyg h5, .wysiwyg h6 {
  font-weight: 700; }

.wysiwyg a {
  color: #E74C3C; }

.wysiwyg p, .wysiwyg ul, .wysiwyg ol {
  margin-bottom: 3rem; }

.wysiwyg ul, .wysiwyg ol {
  margin-left: 3rem; }

::-moz-selection {
  background: #777;
  color: #fff;
  text-shadow: none; }

::selection {
  background: #777;
  color: #fff;
  text-shadow: none; }

html {
  font-size: 62.5%; }

body {
  background: #171817;
  color: #ffffff;
  font-family: 'Open Sans', Arial, "Helvetica Neue", Helvetica, sans-serif;
  font-weight: normal;
  font-size: 16px;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.004); }

a {
  color: #3C6B9E;
  text-decoration: none; }
  a:hover, a:focus {
    color: #30527F; }
  a:focus {
    outline: none; }

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: 'Open Sans', sans-serif;
  font-weight: 800;
  line-height: 1; }
  h1 a,
  h2 a,
  h3 a,
  h4 a,
  h5 a,
  h6 a {
    color: #000; }

h1 {
  font-size: 3.6rem;
  text-transform: uppercase; }

header {
  padding: 1.5rem; }

p,
li,
dt,
dd {
  font-weight: normal;
  font-style: normal; }

li {
  line-height: 1; }

input,
textarea,
select {
  outline: none;
  border-radius: 0;
  border: 0.1rem solid #eee;
  padding: 0.5rem 1rem;
  margin: 0;
  width: 100%;
  font-size: 1.3rem; }

input,
textarea,
label {
  color: #eee; }

select {
  background: #fff;
  height: 3rem;
  padding: 0.5rem 1rem; }

input[type=search] {
  -webkit-appearance: textfield; }
  input[type=search]::-webkit-search-cancel-button, input[type=search]::-webkit-search-decoration, input[type=search]::-webkit-search-results-button, input[type=search]::-webkit-search-results-decoration {
    -webkit-appearance: none; }

select[multiple] {
  height: auto; }

input[type="checkbox"] {
  vertical-align: bottom; }

input[type="radio"] {
  vertical-align: text-bottom; }

label {
  font-weight: 400; }

input:focus,
textarea:focus {
  outline: none;
  border-color: #eee;
  color: #000; }

input[type="submit"] {
  border-radius: 0;
  height: auto; }

.placeholder {
  color: #000; }

input::-webkit-input-placeholder,
textarea::-webkit-input-placeholder {
  color: #000; }

input:-moz-placeholder,
textarea:-moz-placeholder {
  color: #000; }

input::-moz-placeholder,
textarea::-moz-placeholder {
  color: #000; }

input:-ms-input-placeholder,
textarea:-ms-input-placeholder {
  color: #000; }

input:focus::-webkit-input-placeholder,
textarea:focus::-webkit-input-placeholder {
  color: blue; }

input:focus:-moz-placeholder,
textarea:focus:-moz-placeholder {
  color: blue; }

input:focus::-moz-placeholder,
textarea:focus::-moz-placeholder {
  color: blue; }

input:focus:-ms-input-placeholder,
textarea:focus:-ms-input-placeholder {
  color: blue; }

button::-moz-focus-inner {
  padding: 0;
  border: 0; }

input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0; }

input[type=number] {
  -moz-appearance: textfield; }

input[type="text"],
input[type="time"],
input[type="url"],
input[type="email"],
input[type="password"],
input[type="button"],
input[type="submit"],
textarea {
  -webkit-appearance: none;
  -moz-appearance: none; }

input[type="range"] {
  background-color: transparent;
  border: none; }

input[type=range] {
  -webkit-appearance: none;
  width: 100%;
  margin: 11.1px 0; }

input[type=range]:focus {
  outline: none; }

input[type=range]::-webkit-slider-runnable-track {
  width: 100%;
  height: 2.8px;
  cursor: pointer;
  -webkit-box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;
          box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;
  background: #000000;
  border-radius: 0px;
  border: 0px solid #010101; }

input[type=range]::-webkit-slider-thumb {
  -webkit-box-shadow: 1.7px 1.7px 0.2px rgba(0, 0, 0, 0.1), 0px 0px 1.7px rgba(13, 13, 13, 0.1);
          box-shadow: 1.7px 1.7px 0.2px rgba(0, 0, 0, 0.1), 0px 0px 1.7px rgba(13, 13, 13, 0.1);
  border: 1px solid rgba(0, 0, 0, 0.1);
  height: 25px;
  width: 25px;
  border-radius: 50px;
  background: #E42A42;
  cursor: pointer;
  -webkit-appearance: none;
  margin-top: -11.1px; }

input[type=range]:focus::-webkit-slider-runnable-track {
  background: #000000; }

input[type=range]::-moz-range-track {
  width: 100%;
  height: 2.8px;
  cursor: pointer;
  box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;
  background: #000000;
  border-radius: 0px;
  border: 0px solid #010101; }

input[type=range]::-moz-range-thumb {
  box-shadow: 1.7px 1.7px 0.2px rgba(0, 0, 0, 0.1), 0px 0px 1.7px rgba(13, 13, 13, 0.1);
  border: 1.7px solid rgba(255, 255, 255, 0.24);
  height: 25px;
  width: 25px;
  border-radius: 50px;
  background: #E42A42;
  cursor: pointer; }

input[type=range]::-ms-track {
  width: 100%;
  height: 2.8px;
  cursor: pointer;
  background: transparent;
  border-color: transparent;
  color: transparent; }

input[type=range]::-ms-fill-lower {
  background: #000000;
  border: 0px solid #010101;
  border-radius: 0px;
  box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d; }

input[type=range]::-ms-fill-upper {
  background: #000000;
  border: 0px solid #010101;
  border-radius: 0px;
  box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d; }

input[type=range]::-ms-thumb {
  box-shadow: 1.7px 1.7px 0.2px rgba(0, 0, 0, 0.1), 0px 0px 1.7px rgba(13, 13, 13, 0.1);
  border: 1.7px solid rgba(255, 255, 255, 0.24);
  height: 25px;
  width: 25px;
  border-radius: 50px;
  background: #E42A42;
  cursor: pointer;
  height: 2.8px; }

input[type=range]:focus::-ms-fill-lower {
  background: #000000; }

input[type=range]:focus::-ms-fill-upper {
  background: #000000; }

body {
  padding-top: 3rem;
  padding-bottom: 11.1rem;
  min-height: 100vh; }

main.app {
  position: static; }

canvas {
  display: none; }

.invert-preview {
  cursor: pointer;
  display: inline-block;
  font-size: 1em;
  height: 1.5em;
  width: 1.5em;
  z-index: 2;
  background-color: #171817; }
  .invert-preview i {
    position: absolute;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
        -ms-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%); }

.live-wrapper {
  background-color: rgba(0, 0, 0, 0.5);
  cursor: pointer;
  position: absolute;
  bottom: 2vw;
  right: 2vw;
  height: 14.0625vw;
  display: inline-block;
  width: 25vw;
  z-index: 10;
  border: 1px solid #222; }
  .view.invert .live-wrapper {
    bottom: inherit;
    right: inherit;
    left: 0;
    top: 0;
    display: inline-block;
    width: 100%;
    z-index: 1;
    border: none; }
    .view.invert .live-wrapper .invert-preview {
      display: none; }
  .live-wrapper > .live {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: auto; }
  .live-wrapper::before {
    position: absolute;
    top: 0.2rem;
    right: 0.2rem;
    opacity: .8;
    font-size: 0.7rem;
    color: #E42A42;
    border: 1px solid #E42A42;
    background-color: #ffffff;
    padding: 0.1rem 0.3rem;
    content: "LIVE";
    font-weight: bold;
    z-index: 2; }

.preview-wrapper {
  background-color: rgba(0, 0, 0, 0.2);
  position: absolute;
  display: inline-block;
  width: 100%;
  z-index: 1;
  border: none;
  top: 0;
  left: 0; }
  .view.invert .preview-wrapper {
    top: inherit;
    left: inherit;
    bottom: 2vw;
    right: 2vw;
    height: 14.0625vw;
    width: 25vw;
    z-index: 10;
    border: 1px solid #222; }
    .view.invert .preview-wrapper .invert-preview {
      display: inline-block; }
  .preview-wrapper .invert-preview {
    display: none; }
  .preview-wrapper > .preview {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: auto; }
  .preview-wrapper::before {
    position: absolute;
    top: 0.2rem;
    right: 0.2rem;
    opacity: .8;
    font-size: 0.7rem;
    color: #3C6B9E;
    border: 1px solid #3C6B9E;
    background-color: #ffffff;
    padding: 0.1rem 0.3rem;
    content: "GIF";
    font-weight: bold;
    z-index: 2; }

.view {
  margin: 0 auto;
  padding: 2vw;
  background-color: #171817;
  width: 100%;
  max-width: 139vh; }
  .view::after {
    content: "";
    display: block;
    padding-top: 56%;
    height: 0;
    width: 0; }

.frame-wrapper {
  position: fixed;
  top: 0;
  right: calc(-20vw);
  width: 20vw;
  height: 100%;
  overflow-y: scroll;
  background-color: #111;
  border-left: 1px solid #171817;
  z-index: 40;
  -webkit-transition: right 300ms ease-in;
  transition: right 300ms ease-in; }
  .frame-wrapper.active {
    right: 0; }

.frame-container {
  padding: .2em 0;
  cursor: move; }
  .frame-container + .frame-container {
    margin-top: 1vw; }

.frames {
  list-style: none;
  padding: 1vw; }
  .frames img {
    display: block;
    width: calc(100% - .5em); }

.remove {
  cursor: pointer;
  color: #ffffff;
  position: absolute;
  top: -.5em;
  right: 0em;
  z-index: 2;
  background-color: #E42A42;
  border-radius: 50%;
  height: 1em;
  width: 1em; }
  .remove i {
    font-size: .7em;
    line-height: .5;
    position: absolute;
    left: 50%;
    top: 50%;
    -webkit-transform: translate(-50%, -50%);
        -ms-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%); }

.controls {
  position: absolute;
  bottom: 0;
  left: 0;
  font-size: 1rem;
  padding: 1em;
  width: 100%;
  background-color: #2B2E2B;
  list-style: none;
  font-size: 1.6rem; }

.control {
  display: inline-block;
  margin-right: 0.5em;
  vertical-align: middle; }
  .control.disabled {
    opacity: .2;
    cursor: not-allowed; }
    .control.disabled::before {
      position: absolute;
      top: 0;
      left: 0;
      height: 100%;
      width: 100%;
      background-color: rgba(0, 0, 0, 0.001);
      content: "";
      z-index: 2; }
  .control.wide {
    width: 35%; }
  .control.divider {
    margin-right: 1em;
    padding-right: 1em;
    border-right: 1px solid #111; }
  .control .button {
    cursor: pointer;
    display: block;
    padding: .2em;
    font-size: 1em;
    line-height: 1;
    height: 2em;
    width: 2em;
    background-color: #3C6B9E;
    -webkit-box-shadow: 0.1em 0.1em 0 #30527F;
            box-shadow: 0.1em 0.1em 0 #30527F; }
    .control .button:link, .control .button:hover, .control .button:active, .control .button:visited {
      color: #ffffff; }
    .control .button.large {
      font-size: 2em; }
    .control .button.round {
      border-radius: 50%; }
    .control .button.red {
      background-color: #E42A42;
      -webkit-box-shadow: 0.1em 0.1em 0 #AA2029;
              box-shadow: 0.1em 0.1em 0 #AA2029; }
    .control .button i {
      position: absolute;
      top: 50%;
      left: 50%;
      -webkit-transform: translate(-50%, -50%);
          -ms-transform: translate(-50%, -50%);
              transform: translate(-50%, -50%);
      text-align: center;
      line-height: .7; }
      .control .button i::after {
        -webkit-transform: translateY(-3px);
            -ms-transform: translateY(-3px);
                transform: translateY(-3px);
        font-size: 0.8rem;
        text-transform: uppercase;
        content: attr(data-label);
        display: block;
        font-style: normal;
        font-weight: bold;
        line-height: .5;
        text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.1); }
    .control .button i.s-garbage::before {
      margin-left: 0.3rem; }
    .control .button:focus, .control .button:active, .control .button.active {
      top: .1em;
      left: .1em;
      -webkit-box-shadow: none;
              box-shadow: none; }

.loading {
  display: none;
  position: absolute;
  top: 0;
  left: 0;
  background-color: rgba(0, 0, 0, 0.7);
  height: 100%;
  width: 100%;
  z-index: 3; }
  .loading.active {
    display: block; }
  .loading .content {
    position: absolute;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
        -ms-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
    width: 8vw;
    height: auto; }
    .loading .content > * {
      position: relative;
      left: 50%;
      -webkit-transform: translateX(-50%);
          -ms-transform: translateX(-50%);
              transform: translateX(-50%); }
  .loading .percent {
    display: block;
    padding: 1vw;
    text-transform: uppercase;
    font-size: 12px;
    font-weight: bold;
    text-align: center;
    color: #ffffff; }

.no-images {
  display: none;
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  color: #30527F; }
  .no-images i.symbol {
    position: absolute;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
        -ms-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
    font-size: 150px; }
  .no-images.active {
    display: block; }

.render-speed-label {
  display: block;
  font-size: 1rem;
  text-align: center;
  text-transform: uppercase; }

header {
  position: fixed;
  height: 2em;
  top: 0;
  left: 0;
  width: 100%;
  padding: .5em;
  line-height: 1;
  z-index: 20;
  background-color: #3C6B9E; }
  header h1,
  header p {
    display: inline-block;
    font-size: 1.2rem; }

.browse-happy {
  background-color: transparent;
  background-color: rgba(119, 119, 119, 0.97);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#F7777777,endColorstr=#F7777777);
  zoom: 1;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 800; }
  .browse-happy p {
    display: block;
    width: 800px;
    height: 200px;
    font-size: 2em;
    line-height: 1.3em;
    text-align: center;
    color: #fff; }
    .browse-happy p a {
      display: inline-block;
      color: #59b6fd;
      line-height: 1em;
      border-bottom: 1px solid rgba(89, 182, 253, 0.2); }
      .browse-happy p a:hover {
        color: rgba(89, 182, 253, 0.8); }

.sample-header {
  text-align: center;
  font-family: 'Open Sans', sans-serif;
  font-weight: 300;
  font-size: 4rem;
  text-transform: uppercase;
  padding: 3rem;
  margin-bottom: 5rem;
  color: #E74C3C; }
  .sample-header h1 {
    font-weight: inherit; }

.col-wrap {
  zoom: 1;
  width: 100%;
  max-width: 70rem;
  margin: 0 auto; }
  .col-wrap:before, .col-wrap:after {
    content: "\0020";
    display: block;
    height: 0;
    overflow: hidden; }
  .col-wrap:after {
    clear: both; }
  .col-wrap .wysiwyg {
    padding: 0 1rem; }

.sample-sprites,
.sample-symbols {
  float: left;
  width: calc(100% - 20px);
  float: left;
  max-width: 600px;
  margin: 0 1rem 4rem;
  padding: 0 4rem 4rem;
  border: 1px solid rgba(23, 24, 23, 0.2);
  border-radius: 0.5rem;
  overflow: hidden;
  width: calc(50% - 20px);
  margin: 0 1rem 4rem; }
  .sample-sprites h2,
  .sample-symbols h2 {
    display: inline-block;
    width: calc(100% + 80px);
    left: -4rem;
    padding: 1rem 4rem;
    background: #171817;
    color: #fff;
    font-family: 'Open Sans', sans-serif;
    font-weight: 700;
    font-size: 1.6rem;
    margin-bottom: 4rem; }
  .sample-sprites i,
  .sample-symbols i {
    display: block;
    margin-bottom: 3rem; }
    .sample-sprites i:last-of-type,
    .sample-symbols i:last-of-type {
      margin-bottom: 0; }

.sample-sprites .icon-one:before {
  content: "";
  background-position: 0px 0px;
  background-repeat: no-repeat;
  overflow: hidden;
  display: block;
  width: 105px;
  height: 105px; }

.sample-sprites .icon-two:before {
  content: "";
  background-position: -105px 0px;
  background-repeat: no-repeat;
  overflow: hidden;
  display: block;
  width: 95px;
  height: 79px; }

.sample-symbols .symbol-one {
  font-size: 3rem; }
  .sample-symbols .symbol-one:before {
    content: '\E001'; }

.sample-symbols .symbol-two {
  font-size: 3rem; }
  .sample-symbols .symbol-two:before {
    content: '\E002';
    color: #3498DB; }

.grid-samples code {
  display: block; }

.grid-samples h2 {
  text-align: center;
  margin-bottom: 2rem; }

.grid-samples h4 {
  text-align: center;
  margin-bottom: 2rem; }

.grid-samples .row > code {
  text-align: center;
  padding: 2rem; }

.grid-samples .row {
  max-width: 1200px;
  margin-left: auto;
  margin-right: auto;
  background: rgba(23, 24, 23, 0.1);
  padding: 0 2rem;
  margin-bottom: 5rem; }
  .grid-samples .row:after {
    content: " ";
    display: block;
    clear: both; }

.grid-samples div,
.grid-samples aside,
.grid-samples article {
  background: rgba(23, 24, 23, 0.4);
  padding: 2rem;
  margin-bottom: 2rem;
  color: #fff; }

.grid-basic div {
  width: 48.97959%;
  float: left;
  margin-right: 2.04082%; }
  .grid-basic div:first-child {
    width: 48.97959%;
    float: left;
    margin-right: 2.04082%; }
  .grid-basic div:last-child {
    width: 48.97959%;
    float: right;
    margin-right: 0; }

.grid-multiple div {
  float: left; }

.grid-multiple .item-1 {
  width: 6.77966%;
  float: left;
  margin-right: 1.69492%; }

.grid-multiple .item-2 {
  width: 91.52542%;
  float: right;
  margin-right: 0; }

.grid-multiple .item-3 {
  width: 15.25424%;
  float: left;
  margin-right: 1.69492%; }

.grid-multiple .item-4 {
  width: 83.05085%;
  float: right;
  margin-right: 0; }

.grid-multiple .item-5 {
  width: 23.72881%;
  float: left;
  margin-right: 1.69492%; }

.grid-multiple .item-6 {
  width: 74.57627%;
  float: right;
  margin-right: 0; }

.grid-multiple .item-7 {
  width: 32.20339%;
  float: left;
  margin-right: 1.69492%; }

.grid-multiple .item-8 {
  width: 66.10169%;
  float: right;
  margin-right: 0; }

.grid-multiple .item-9 {
  width: 40.67797%;
  float: left;
  margin-right: 1.69492%; }

.grid-multiple .item-10 {
  width: 57.62712%;
  float: right;
  margin-right: 0; }

.grid-multiple .item-11 {
  width: 49.15254%;
  float: left;
  margin-right: 1.69492%; }

.grid-multiple .item-12 {
  width: 49.15254%;
  float: right;
  margin-right: 0; }

.grid-nested .item-1 {
  width: 31.81818%;
  float: left;
  margin-right: 2.27273%; }

.grid-nested .item-2 {
  width: 65.90909%;
  float: right;
  margin-right: 0; }
  .grid-nested .item-2 > code {
    margin-bottom: 2rem;
    text-align: center; }

.grid-nested aside,
.grid-nested article {
  margin-bottom: 0; }

.grid-nested aside {
  width: 48.71795%;
  float: left;
  margin-right: 2.5641%; }

.grid-nested article {
  width: 48.71795%;
  float: right;
  margin-right: 0; }

/*# sourceMappingURL=data:application/json;base64, */
